---
import type { PlayerData, Team, MatchResults } from '../util/srlmTypes'
import { colorCalc } from '../util/srlmUtils';

interface Props {
    team: Team,
    playerData: PlayerData[],
    results: MatchResults
}

const {team, playerData, results } = Astro.props;
---
<table class="bg-gray-600 bg-opacity-40 rounded-md shadow-md shadow-black">
    <thead class="bg-gray-900">
        <tr class="text-2xl bg-gray-800">
            <th colspan="4" class="font-bold rounded-tl-md" style={colorCalc(team.color)}>{team.name}</th>
            <th class="pl-6">
                Score:
            </th>
            <th class="pr-4 rounded-tr-md">{
                (team.name === results.winner) && 
                    results.score_winner
            }{
                (team.name === results.loser) &&
                    results.score_loser
            }</th>
        </tr>
        <tr class="divide-x-2 divide-gray-400">
            <th class="px-2">Player</th>
            <th class="px-2">Periods</th>
            <th class="px-2">Goals</th>
            <th class="px-2">Shots</th>
            <th class="px-2">Assists</th>
            <th class="px-2">Saves</th>
        </tr>
    </thead>
    <tbody>
        {
            playerData.map((player, index) => (
            <tr class={`${(index%2===0 && 'bg-gray-600') || 'bg-gray-700'} divide-x-2 divide-gray-400`}>
                <td class={`${(index+1)===playerData.length && 'rounded-bl-md'} px-2 py-1`}>{player.player}</td>
                <td class="px-2 py-1">{player.periods_played}</td>
                <td class="px-2 py-1">{player.goals}</td>
                <td class="px-2 py-1">{player.shots}</td>
                <td class="px-2 py-1">{player.assists}</td>
                <td class={`${(index+1)===playerData.length && 'rounded-br-md'} px-2 py-1`}>{player.saves}</td>
            </tr>
            ))
        }
    </tbody>
</table>