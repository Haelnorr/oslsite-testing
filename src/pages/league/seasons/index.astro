---
import Layout from "../../../layouts/Layout.astro";
import type { SeasonCollection } from "../../../util/srlmTypes";
import { convert_link, srlm_get } from "../../../util/srlmUtils";

var page: string = Astro.url.searchParams.get('page')! || '1';
var per_page: string = Astro.url.searchParams.get('per_page')! || '10';
var start_date: string = Astro.url.searchParams.get('start_date')! || null;
var end_date: string = Astro.url.searchParams.get('end_date')! || null;
var order: string = Astro.url.searchParams.get('order')! || 'desc';
var order_by: string = Astro.url.searchParams.get('order_by')! || null;

const date_regex: RegExp = /^[0-9]{4}\-[0-9]{2}\-[0-9]{2}?$/;

if (isNaN(+page)) {page='1'}
if (isNaN(+per_page)) {per_page='10'}
if (!date_regex.test(start_date)) {start_date = null}
if (!date_regex.test(end_date)) {end_date = null}
if (order != 'desc' && order != 'asc') {order = 'desc'}
if (order_by != 'id' &&
    order_by != 'start_date' &&
    order_by != 'end_date' &&
    order_by != 'finals_start' &&
    order_by != 'finals_end' &&
    order_by != 'name' &&
    order_by != 'league') {order_by = null}

var query = `league=osl&page=${page}&per_page=${per_page}&order=${order}`;
if (start_date) {
    query = query + `&start_date=${start_date}`;
}
if (end_date) {
    query = query + `&end_date=${end_date}`;
}
if (order_by) {
    query = query + `&order_by=${order_by}`;
}
const seasons: SeasonCollection = await srlm_get(`/seasons?${query}`);

function query_to_dict(query) {
    var params_list = query.replace('?', '').split('&');

    var params = {};

    params_list.forEach(split_param);

    function split_param(param: string) {
        const keypair = param.split('=');
        params[keypair[0]] = keypair[1];
    }


    return params;
}


function update_query(link) {
    var old_query = query_to_dict(Astro.url.search);
    if (!Astro.url.search) {
        old_query = {}
    }
    
    var new_query = query_to_dict(link.replace('/api/teams', ''));

    if (Object.keys(new_query).includes('order_by')) {
        if (new_query['order_by'] === old_query['order_by'] || new_query['order_by'] === order_by){
            switch (order) {
                case 'asc':
                    new_query['order'] = 'desc';
                    break;
                case 'desc':
                    new_query['order'] = 'asc';
                    break;
            }
        } else {
            new_query['order'] = 'asc';
        }
    }

    const updated_params = {
        ...old_query, 
        ...new_query
    }

    var updated_query = '?';

    for (let key in updated_params) {
        if (updated_query != '?') {updated_query = updated_query + '&'}
        updated_query = updated_query + `${key}=${updated_params[key]}`
    }
    return Astro.url.pathname + updated_query;
    
}
var page_nums = Array.from({length: seasons._meta.total_pages}, (_, i) => i + 1);
---
<Layout title="Seasons">
    <main class="text-white sm:container py-10 px-40 mx-auto">
        <div class="mx-auto w-fit max-w-full overflow-x-auto">
            <table>
                <thead class="bg-gray-900">
                    <tr class="divide-x-2 divide-gray-400">
                        <th class="px-3">
                            <a href={update_query('order_by=id')} class="hover:underline">
                                ID
                            </a>
                        </th>
                        <th class="px-3">
                            <a href={update_query('order_by=name')} class="hover:underline">
                                Name
                            </a>
                        </th>
                        <th class="px-3">
                            <a href={update_query('order_by=acronym')} class="hover:underline">
                                Acronym
                            </a>
                        </th>
                        <th class="px-3">
                            <a href={update_query('order_by=start_date')} class="hover:underline">
                                Start Date
                            </a>
                        </th>
                        <th class="px-3">
                            <a href={update_query('order_by=end_date')} class="hover:underline">
                                End Date
                            </a>
                        </th>
                        <th class="px-3">
                            <a href={update_query('order_by=finals_start')} class="hover:underline">
                                Finals Start
                            </a>
                        </th>
                        <th class="px-3">
                            <a href={update_query('order_by=finals_end')} class="hover:underline">
                                Finals End
                            </a>
                        </th>
                        <th class="px-3">
                            <a>
                                Registration
                            </a>
                        </th>
                        <th class="px-3">
                            <a>
                                Match Type
                            </a>
                        </th>
                        <th class="px-3">
                            <a>
                                Divisions
                            </a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    {
                        seasons.items.map((season, index) => (
                            <tr class={`${(index%2===0 && 'bg-gray-600') || 'bg-gray-700'} divide-x-2 divide-gray-400`}>
                                <td class="px-3">
                                    <a href={`/league/seasons/${season.acronym}`} class="hover:underline">
                                        {season.id}
                                    </a>
                                </td>
                                <td class="px-3">
                                    <a href={`/league/seasons/${season.acronym}`} class="hover:underline">
                                        {season.name}
                                    </a>
                                </td>
                                <td class="px-3">{season.acronym}</td>
                                <td class="px-3">{season.start_date}</td>
                                <td class="px-3">{season.end_date}</td>
                                <td class="px-3">{season.finals_start}</td>
                                <td class="px-3">{season.finals_end}</td>
                                <td class="px-3">{season.can_register && 'Open' || 'Closed'}</td>
                                <td class="px-3">{season.match_type}</td>
                                <td class="px-3">
                                    {
                                        season.divisions.map(division => (
                                            <a href={`/league/seasons/${season.acronym}/${division.acronym}`} class="hover:underline">
                                                {division.name}
                                            </a><br/>
                                        ))
                                    }
                                </td>
                            </tr>
                        ))
                    }
                </tbody>
            </table>
            <div class="mt-3 flex justify-center">
                <div class="w-14 h-6">
                    {seasons._links.prev &&
                        <a href={update_query(seasons._links.prev)}
                            class="bg-gray-400 text-black font-bold px-2 rounded-md outline outline-2 outline-gray-900 hover:bg-gray-300 mx-2">
                            Prev
                        </a>
                    }
                </div>
                <div class="mx-3 w-fit">
                    {
                        page_nums.map(page => (
                            <span>
                                {(page != seasons._meta.page) &&
                                    <a href={update_query(`page=${page}`)} class="hover:underline px-1 hover:cursor-pointer font-bold">{page}</a>
                                    ||
                                    <a class="px-1">{page}</a>
                                }
                            </span>
                        ))
                    }
                </div>
                <div class="w-14 h-6">
                    {seasons._links.next &&
                        <a href={update_query(seasons._links.next)}
                            class="bg-gray-400 text-black font-bold px-2 rounded-md outline outline-2 outline-gray-900 hover:bg-gray-300 mx-2">
                            Next
                        </a>
                    }
                </div>
        </div>
    </main>   
</Layout>