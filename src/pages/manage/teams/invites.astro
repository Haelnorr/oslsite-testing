---
import TeamManageLayout from "../../../layouts/TeamManageLayout.astro";
import { permsHasOneOf, validateUser } from "../../../util/authUtils";
import type { TeamInvite, User } from "../../../util/srlmTypes";
import { SRLMAPIError, srlmGet, srlmPost } from "../../../util/srlmUtils";
import Page401 from '../../401.astro';
import Page403 from '../../403.astro';
import Page404 from '../../404.astro';
import Page500 from '../../500.astro';
import Page503 from '../../503.astro';

var status = '200';

var userToken = Astro.cookies.get('user_token')?.value || '';
const perms = ['admin', 'team_owner', 'team_manager', 'leag_coord', 'leag_comm'];
const userValidate = await validateUser(userToken, perms).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

const userIsPlayer = false;
const userHasTeam = false;

var user: User|null = null;
if (userValidate) {
    user = await srlmGet(`/users/${userValidate?.user}`, userToken).catch(err => {
        if (err instanceof SRLMAPIError) {
            status = err.code;
        }
        console.error(err);
    });
}

if (user?.player?.current_team) {
    return Astro.redirect('/manage/teams');
}

const playerInvites: Array<TeamInvite> = await srlmGet(`/players/${user?.player?.id}/invites`).then(resp => resp['invites']).catch(err => {
    if (err.code === '200') {
        if (err instanceof SRLMAPIError) {
            status = err.code;
        }
        console.error(err);
    }
});

if (Astro.request.method === "POST" && status === "200") {
    const formData = await Astro.request.formData();
    const action = formData.get('action')?.toString();
    const value = formData.get('value')?.toString();
    
    const resp = await srlmPost(`/players/${user!.player.id}/invites`, '', {
        invite_id: value,
        action: action
    }).catch(err => {
        if (err instanceof SRLMAPIError) {
            status = err.code;
        }
        console.error(err);
    });
    console.log(resp)
    return Astro.redirect('/manage/teams/invites')
}

---
{status === '401' &&
    <Page401/>
}
{status === '403' &&
    <Page403/>
}
{status === '404' &&
    <Page404/>
}
{status === '500' &&
    <Page500/>
}
{status === '503' &&
    <Page503/>
}
{status === '200' &&
    <TeamManageLayout 
        title={`My Team Invites`}
        team={null}
        page="invites"
        userPlayer={userIsPlayer}
        userHasTeam={userHasTeam}
        userValidate={userValidate!}>
        <div class="mx-auto w-fit divide-y-2 divide-gray-600">
            {user!.player &&
                <div class="mb-5">
                    <h3 class="text-xl">Team Invites</h3>
                    <table class="mt-5 mx-auto">
                        <thead class="bg-gray-900">
                            <tr class="divide-x-2 divide-gray-400">
                                <th class="px-2">Team</th>
                                <th class="px-2">Invited by</th>
                                <th class="px-2">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            {playerInvites.length > 0 &&
                                playerInvites.map((invite, index) => (
                                    <tr class={`${(index%2===0 && 'bg-gray-600') || 'bg-gray-700'} divide-x-2 divide-gray-400`}>
                                        <td class="px-2">{invite.team.name}</td>
                                        <td class="px-2">{invite.inviting_player.player_name}</td>
                                        <td class="px-2 py-1 flex">
                                            <form method="post" class="mr-2">
                                                <input type="text" name="action" value="accept" hidden/>
                                                <input type="text" name="value" value={invite.id.toString()} hidden/>
                                                <button formaction={`/manage/teams/invites`} class="accept bg-gray-400 text-black font-bold px-2 rounded-md outline outline-2 outline-gray-900 hover:bg-gray-300">
                                                    Accept
                                                </button>
                                            </form>
                                            <form method="post">
                                                <input type="text" name="action" value="reject" hidden/>
                                                <input type="text" name="value" value={invite.id.toString()} hidden/>
                                                <button formaction={`/manage/teams/invites`} class="reject bg-gray-400 text-black font-bold px-2 rounded-md outline outline-2 outline-gray-900 hover:bg-gray-300">
                                                    Reject
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                )) ||
                                <tr class="bg-gray-700"><td colspan="100%" class="p-1">No invites received</td></tr>
                            }
                        </tbody>
                    </table>
                    <script is:inline>
                        var acceptButtons = [].slice.call(document.getElementsByClassName('accept'));
                        acceptButtons.forEach(element => {
                            element.onclick = function confirmAccept(e) {
                                if (!confirm('Are you sure you wish to accept this invite?'))
                                    e.preventDefault();
                            }
                        });
                        var rejectButtons = [].slice.call(document.getElementsByClassName('reject'));
                        rejectButtons.forEach(element => {
                            element.onclick = function confirmCancel(e) {
                                if (!confirm('Are you sure you wish to reject this invite?'))
                                    e.preventDefault();
                            }
                        });
                    </script>
                </div>
                ||
                <p>You do not have a linked Slapshot profile.
                <br>Please link your steam account.</p>
            }
        </div>
    </TeamManageLayout>
}