---
import Link from '../../../components/Link.astro';
import LinkButton from '../../../components/LinkButton.astro';
import MatchManageLayout from '../../../layouts/MatchManageLayout.astro';
import { permsHasOneOf, validateUser } from '../../../util/authUtils';
import type { Match, MatchesList } from '../../../util/srlmTypes';
import { SRLMAPIError, srlmGet } from '../../../util/srlmUtils';
import Page401 from '../../401.astro';
import Page403 from '../../403.astro';
import Page500 from '../../500.astro';
import Page503 from '../../503.astro';

var status = '200';

const userToken = Astro.cookies.get('user_token')?.value || '';
const permsList = ['admin', 'leag_coord', 'leag_comm'];
const userValidate = await validateUser(userToken, permsList).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    } else {
        status = '500';
    }
	console.error(err);
});

const userElevated = permsHasOneOf(userValidate, permsList);
if (!userElevated && status === '200') {
    status = '403';
}

const matchList: MatchesList = await srlmGet('/match').catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    } else {
        status = '500';
    }
	console.error(err);
});

function getTeamID(match:Match, team:string):string {
	if (match.home_team.name === team) {
		return match.home_team.id.toString();
	} else if (match.away_team.name === team) {
		return match.away_team.id.toString();
	} else {
		throw new Error('Team name not found');
	}
}

---
{status === '401' &&
	<Page401/>
}
{status === '403' &&
	<Page403/>
}
{status === '500' &&
	<Page500/>
}
{status === '503' &&
	<Page503/>
}
{status === '200' &&
	<MatchManageLayout title="Manage Matches" page="list" userValidate={userValidate!}>
		<div class="divide-y-2 divide-gray-400 w-fit mx-auto">
			<div class="mb-5">
				<h2 class="text-2xl">Pending Review</h2>
				<table class="mx-auto mt-5">
					<thead class="bg-gray-900">
						<tr class="divide-x-2 divide-gray-400">
							<th class="px-2">Season</th>
							<th class="px-2">Division</th>
							<th class="px-2">Home Team</th>
							<th class="px-2">Away Team</th>
							<th class="px-2">Round</th>
							<th class="px-2">Match Week</th>
							<th class="px-2">Review</th>
						</tr>
					</thead>
					<tbody>
						{
							matchList.pending_review.map((match, index) => (
								<tr class={`${(index%2===0 && 'bg-gray-600') || 'bg-gray-700'} divide-x-2 divide-gray-400`}>
									<td class="px-2">
										<Link label={match.season_division.season.name} itemID={match.season_division.season.acronym} location="/league/seasons"/>
									</td>
									<td class="px-2">
										<Link label={match.season_division.division.name} itemID={match.season_division.division.acronym} location={`/league/seasons/${match.season_division.season.acronym}`}/>
									</td>
									<td class="px-2">
										<Link label={match.home_team.name} itemID={match.home_team.id.toString()} location="/league/teams"/>
									</td>
									<td class="px-2">
										<Link label={match.away_team.name} itemID={match.away_team.id.toString()} location="/league/teams"/>
									</td>
									<td class="px-2">{match.round}</td>
									<td class="px-2">{match.match_week}</td>
									<td class="px-2 py-1">
										<LinkButton label="Review" href={`/manage/match/${match.id}/review`} color='gray' fontColor='black' mini={true}/>
									</td>
								</tr>
							))
						}
						{matchList.pending_review.length === 0 &&
							<tr class="bg-gray-600"><td colspan="100%">No matches to display</td></tr>
						}
					</tbody>
				</table>
			</div>
			<div class="mb-5">
				<h2 class="text-2xl mt-5">Upcoming</h2>
				<table class="mx-auto mt-5">
					<thead class="bg-gray-900">
						<tr class="divide-x-2 divide-gray-400">
							<th class="px-2">Season</th>
							<th class="px-2">Division</th>
							<th class="px-2">Home Team</th>
							<th class="px-2">Away Team</th>
							<th class="px-2">Round</th>
							<th class="px-2">Match Week</th>
							<th class="px-2">Cancelled?</th>
							<th class="px-2">Action</th>
						</tr>
					</thead>
					<tbody>
						{
							matchList.upcoming.map((match, index) => (
								<tr class={`${(index%2===0 && 'bg-gray-600') || 'bg-gray-700'} divide-x-2 divide-gray-400`}>
									<td class="px-2">
										<Link label={match.season_division.season.name} itemID={match.season_division.season.acronym} location="/league/seasons"/>
									</td>
									<td class="px-2">
										<Link label={match.season_division.division.name} itemID={match.season_division.division.acronym} location={`/league/seasons/${match.season_division.season.acronym}`}/>
									</td>
									<td class="px-2">
										<Link label={match.home_team.name} itemID={match.home_team.id.toString()} location="/league/teams"/>
									</td>
									<td class="px-2">
										<Link label={match.away_team.name} itemID={match.away_team.id.toString()} location="/league/teams"/>
									</td>
									<td class="px-2">{match.round}</td>
									<td class="px-2">{match.match_week}</td>
									<td class="px-2">{match.cancelled || 'No'}</td>
									<td class="px-2 py-1">
										<LinkButton label="Edit" href={`/manage/match/${match.id}`} color='gray' fontColor='black' mini={true}/>
										<LinkButton label="Upload Logs" href={`/manage/match/${match.id}/upload-logs`} color='gray' fontColor='black' mini={true}/>
									</td>
								</tr>
							))
						}
						{matchList.upcoming.length === 0 &&
							<tr class="bg-gray-600"><td colspan="100%">No matches to display</td></tr>
						}
					</tbody>
				</table>
			</div>
			<div>
				<h2 class="text-2xl mt-5">Completed</h2>
				<table class="mx-auto mt-5">
					<thead class="bg-gray-900">
						<tr class="divide-x-2 divide-gray-400">
							<th class="px-2">Season</th>
							<th class="px-2">Division</th>
							<th class="px-2">Home Team</th>
							<th class="px-2" colspan="2">Score</th>
							<th class="px-2">Away Team</th>
							<th class="px-2">Round</th>
							<th class="px-2">Match Week</th>
							<th class="px-2">View</th>
						</tr>
					</thead>
					<tbody>
						{
							matchList.completed.map((match, index) => (
								<tr class={`${(index%2===0 && 'bg-gray-600') || 'bg-gray-700'} divide-x-2 divide-gray-400`}>
									<td class="px-2">
										<Link label={match.season_division.season.name} itemID={match.season_division.season.acronym} location="/league/seasons"/>
									</td>
									<td class="px-2">
										<Link label={match.season_division.division.name} itemID={match.season_division.division.acronym} location={`/league/seasons/${match.season_division.season.acronym}`}/>
									</td>
									<td class="px-2">
										<Link label={match.results.winner} itemID={getTeamID(match, match.results.winner)} location="/league/teams"/>
									</td>
									<td class="px-2">{match.results.score_winner}</td>
									<td class="px-2">{match.results.score_loser}</td>
									<td class="px-2">
										<Link label={match.results.loser} itemID={getTeamID(match, match.results.loser)} location="/league/teams"/>
									</td>
									<td class="px-2">{match.round}</td>
									<td class="px-2">{match.match_week}</td>
									<td class="px-2 py-1">
										<LinkButton label="View" href={`/league/match/${match.id}`} color='gray' fontColor='black' mini={true}/>
									</td>
								</tr>
							))
						}
						{matchList.completed.length === 0 &&
							<tr class="bg-gray-600"><td colspan="100%">No matches to display</td></tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</MatchManageLayout>
}