---
import Layout from '../../../../layouts/Layout.astro';
import { setCookies, validateUser } from '../../../../util/authUtils';
import { getTokens, getUser } from '../../../../util/discordUtils';
import type { Token, User } from '../../../../util/srlmTypes';
import { SRLMAPIError, srlmGet, srlmPost, srlmPut } from '../../../../util/srlmUtils';
import Page401 from '../../../401.astro';
import Page403 from '../../../403.astro';
import Page404 from '../../../404.astro';
import Page500 from '../../../500.astro';
import Page503 from '../../../503.astro';

const code = Astro.url.searchParams.get('code');
var status = '200';

if (!code) {
    return Astro.redirect('/login?error=discordauth');
}

const discordLogin = await getTokens(code);
const userTokenStr = Astro.cookies.get('user_token')?.value;

if (userTokenStr) {
    
    const userValidate = await validateUser(userTokenStr).catch(err => {
        if (err instanceof SRLMAPIError) {
            status = err.code;
        }
        console.error(err.message);
    });;

    if (userValidate) {
        const user: User = await srlmGet(`/users/${userValidate.user}`, userTokenStr);
        const discordUser = await getUser(discordLogin.access_token);

        const discordLink = {
            discord_id: discordUser.id,
            access_token: discordLogin.access_token,
            refresh_token: discordLogin.refresh_token,
            expires_in: discordLogin.expires_in
        }
        if (!user.discord) {
            await srlmPost(`/users/${user.id}/discord`, userTokenStr, discordLink).catch(err => {
                console.error(err.message);
            });
        } else {
            await srlmPut(`/users/${user.id}/discord`, userTokenStr, discordLink).catch(err => {
                console.error(err.message);
                console.error(err.data)
            })
        }
        
        return Astro.redirect('/profile')
    }
}

const userToken: Token = await srlmPost('/auth/discord', '', discordLogin);

setCookies(Astro, userToken);

const userResponse = await getUser(discordLogin.access_token);
console.log(userResponse)

if (!userResponse) {
    return Astro.redirect('/login?error=discordauth');
}

return Astro.redirect('/profile');

---
{status === '401' &&
	<Page401/>
}
{status === '403' &&
	<Page403/>
}
{status === '404' &&
	<Page404/>
}
{status === '500' &&
	<Page500/>
}
{status === '503' &&
	<Page503/>
}
{status === '200' &&
	<Layout title='Validating credentials...'>
        <p class="text-white"></p>
    </Layout>
}
