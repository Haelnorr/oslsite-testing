---
import Layout from '../../layouts/Layout.astro';
import Greetings from '../../data/greetings.json';
import { getUser, refreshToken } from '../../util/discordUtils';
import { Image } from 'astro:assets';

type AwardType = {
    season:number,
    type:string,
    format:string
};

type UserType = {
    username:string,
    email:string|null,
    passwordHash:string|null,
    currentSeasonActive:boolean,
    slapId:number,
    discordId:number,
    team: {
        id:string,
        name:string,
        seasonFormed:number,
    }|null,
    awards:AwardType[]
};

type DiscordUserType = {
    id:number,
    username:string,
    avatar:string,
    currentSeasonActive:boolean,
    slapId:number,
    team: {
        id:string,
        name:string,
        seasonFormed:number,
    }|null,
    awards:AwardType[]
}

const randomGreeting = Greetings[Math.floor((Math.random() * Greetings.length))];

const access_token = await Astro.cookies.get('access_token')?.value;
const user = await getUser(access_token);

if (user.status_code) {
    const refresh_token = await Astro.cookies.get('refresh_token')?.value;
    if (!refresh_token) {
        return Astro.redirect('/login?error=sessionexpire');
    }
    
    const data = await refreshToken(refresh_token);
    
    if (data.response && data.response.status === 400) {
        return Astro.redirect('/login?error=sessionexpire');
    }
    Astro.cookies.set('refresh_token', data.refresh_token, { 
        maxAge: 60480000,
        httpOnly: true,
        path: '/'
    })
    Astro.cookies.set('access_token', data.access_token, { 
        maxAge: 604800,
        httpOnly: true,
        path: '/'
    })
    return Astro.redirect('/profile');
}

const team = {
    id: "SIL",
    name: "Such Is Life",
    captain: "Spar",
    matches: [
        {
            id: "S19PG1",
            opponent: "FFB",
            schedule: "2024-05-15",
            overtime: false,
            score: "4-2",
            won: true
        },
        {
            id: "S19PG1",
            opponent: "FFB",
            schedule: "2024-05-15"
        },
        {
            id: "S19PG1",
            opponent: "FFB",
            schedule: "2024-05-15"
        },
        {
            id: "S19PG1",
            opponent: "FFB",
            schedule: "2024-05-15"
        }
    ]
}
---

<Layout title="Profile">
	<main class="py-10 sm:container mx-auto">
        <div class="flex justify-center pb-2">
            <Image class="rounded-full h-40 w-40 text-center text-white" src={`https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.jpg?size=4096`} alt={`${user.username} Profile Picture`} height={500} width={500} />
        </div>
        <h1 class="text-white font-bold text-2xl text-center">{randomGreeting}, {user.global_name}</h1>
        <section class="flex flex-wrap justify-between pt-10">
            <div class="bg-red-700 bg-opacity-70 rounded-md p-3 shadow-md shadow-black">
                <h3 class="text-white text-lg font-bold pb-2">Team Overview</h3>
                <hr>
                <ul class="text-white py-2">
                    <li class="py-1"><b>Team ID:</b> {team.id}</li>
                    <li class="py-1"><b>Team Name:</b> {team.name}</li>
                    <li class="py-1"><b>Captain:</b> {team.captain}</li>
                </ul>
                <hr>
                <h4 class="text-white font-bold py-2">Matches</h4>
                <div class="flex flex-wrap gap-2">
                    {team.matches.map((match) => (
                        <div class={`${match.score ? 'opacity-40': 'opacity-100'} rounded-md bg-orange-300 py-2 shadow-inner shadow-black`}>
                            <p class="px-2">{match.id}</p>
                            <p class="px-2">{team.id} vs {match.opponent}</p>   
                            <p class="px-2">{match.schedule}</p>
                            {match.score ? <p class="px-2">{match.score}</p> : null}   
                        </div>
                    ))}
                </div>
            </div>
            <div class="bg-purple-700 bg-opacity-70 rounded-md p-3 shadow-md shadow-black">
                <h3 class="text-white text-lg font-bold pb-2">Streamer Overview</h3>
                <hr>
                <p class="text-white py-2 font-bold">Availability</p>
                <ul class="text-white pt-2 pb-4">
                    <li><p><b>Mon:</b></p></li>
                    <li><p><b>Tues:</b></p></li>
                    <li><p><b>Wed:</b></p></li>
                    <li><p><b>Thur:</b></p></li>
                    <li><p><b>Fri:</b></p></li>
                    <li><p><b>Sat:</b></p></li>
                    <li><p><b>Sun</b></p></li>
                </ul>
                <a href="#" class="p-2 rounded-md bg-green-600 text-white hover:bg-opacity-70">Adjust Streaming Availability</a>
            </div>
            <div class="bg-green-700 bg-opacity-70 rounded-md p-3 shadow-md shadow-black">
                <h3 class="text-white text-lg font-bold pb-2">Moderator Overview</h3>
                <hr>
                
            </div>
        </section>
	</main>
</Layout>