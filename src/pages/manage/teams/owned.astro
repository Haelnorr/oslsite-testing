---
import TeamList from "../../../components/TeamList.astro";
import TeamManageLayout from "../../../layouts/TeamManageLayout.astro";
import { isTeamManager, isTeamOwner, permsHasOneOf, validateUser } from "../../../util/authUtils";
import type { TeamManage, User } from "../../../util/srlmTypes";
import { SRLMAPIError, srlmGet } from "../../../util/srlmUtils";
import Page401 from '../../401.astro';
import Page403 from '../../403.astro';
import Page404 from '../../404.astro';
import Page500 from '../../500.astro';
import Page503 from '../../503.astro';

var status = '200';

var userToken = Astro.cookies.get('user_token')?.value || '';
const perms = ['admin', 'team_owner', 'team_manager', 'leag_coord', 'leag_comm'];
const userValidate = await validateUser(userToken, perms).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

var user: User|null = null;
if (userValidate) {
    user = await srlmGet(`/users/${userValidate?.user}`, userToken).catch(err => {
        if (err instanceof SRLMAPIError) {
            status = err.code;
        }
        console.error(err);
    });
}

var team: TeamManage|null = null;
var userIsPlayer = false;
var userHasTeam = false;

if (user?.player?.current_team) {
    team = await srlmGet(`/teams/${user.player.current_team.id}/manage`).catch(err => {
        if (err instanceof SRLMAPIError) {
            status = err.code;
        }
        console.error(err);
    });
    userIsPlayer = (user.player.current_team.id === team!.id);
    userHasTeam = true;
}

const page = Astro.url.searchParams.get('page')!;
const per_page = Astro.url.searchParams.get('per_page')!;
const order = Astro.url.searchParams.get('order')!;
const order_by = Astro.url.searchParams.get('order_by')!;
---
{status === '401' &&
	<Page401/>
}
{status === '403' &&
	<Page403/>
}
{status === '404' &&
	<Page404/>
}
{status === '500' &&
	<Page500/>
}
{status === '503' &&
	<Page503/>
}
{status === '200' &&
    <TeamManageLayout 
        title={`Manage Teams`}
        team={team!}
        page="owned"
        userPlayer={userIsPlayer}
        userHasTeam={userHasTeam}
        userValidate={userValidate!}>
        <TeamList page={page} per_page={per_page} owner={user!.id.toString()} order_by={order_by} order={order} manage={true}>

        </TeamList>
    </TeamManageLayout>
}