---
import type { Props } from 'astro/components/ViewTransitions.astro';
import Layout from '../../layouts/Layout.astro';
import SeasonCard from '../../components/SeasonCard.astro';
import { convert_link, srlmGet } from '../../util/srlmUtils';
import type { League, SeasonCollection } from '../../util/srlmTypes';

const league_data: League = await srlmGet('/leagues/osl');

//@ts-ignore
if (league_data === '503') {
    return Astro.redirect('/503')
}


function get_yesterday() {
    let date = new Date();
    let options = [
        {year: 'numeric'},
        {month: '2-digit'},
        {day: '2-digit'}
    ];
    date.setDate(date.getDate() - 1);

    function format(option: {}) {
        let formatter = new Intl.DateTimeFormat('en', option);
        return formatter.format(date);
    }
    return options.map(format).join('-');
}

const yesterday: string = get_yesterday();



const current_seasons: SeasonCollection = await srlmGet('/seasons?league=osl&current=True');
const last_season: SeasonCollection = await srlmGet('/seasons?league=osl&last=True');
const upcoming_seasons: SeasonCollection = await srlmGet('/seasons?league=osl&next=True');
const completed_seasons: SeasonCollection = await srlmGet('/seasons?league=osl&order=desc&per_page=50&end_date=' + yesterday);

---
<Layout title="League">
    <main class="py-10 sm:container mx-auto text-white">
        <div class="flex flex-wrap justify-between">
            <div class="w-3/4">
                {current_seasons && (current_seasons.items.length > 0) &&
                    <div id="seasons-active">
                        <h2>Current</h2>
                        {   
                            current_seasons.items.map(season => (
                                <SeasonCard season={season} />
                            ))
                        }
                    </div>
                }

                {last_season && (last_season.items.length > 0) &&
                    <div id="season-recent">
                        <h2>Recently Completed</h2>
                        <SeasonCard season={last_season.items[0]} />
                    </div>
                }
                
                {upcoming_seasons && (upcoming_seasons.items.length > 0) &&
                    <div id="seasons-upcoming">
                        <h2>Upcoming</h2>
                        {
                            upcoming_seasons.items.map(season => (
                                <SeasonCard season={season} />
                            ))
                        }
                    </div>
                }
                
            </div>
            <div class="w-1/5">
                Completed Seasons | <a href="/league/seasons">View all</a>
                <ol class="text-right">
                {
                    completed_seasons.items.map(season => (
                        <li class="text-sm border-b hover:text-osl-yellow-500 hover:border-b-osl-yellow-500 transition-all duration-200 hover:text-base">
                            <a href={"league" + convert_link(season._links.self)}><p class="py-2">{season.name}</p></a>
                        </li>
                    ))
                }
                </ol>
            </div>
        </div>
    </main>
</Layout>