---
import Layout from "../../../../layouts/Layout.astro";
import { permsHasOneOf, validateUser } from "../../../../util/authUtils";
import type { Division, DivisionCollection, Season } from "../../../../util/srlmTypes";
import { SRLMAPIError, srlmGet, srlmPost } from "../../../../util/srlmUtils";
import Page400 from '../../../400.astro';
import Page401 from '../../../401.astro';
import Page403 from '../../../403.astro';
import Page404 from '../../../404.astro';
import Page500 from '../../../500.astro';
import Page503 from '../../../503.astro';

var status = '200';

const userToken = Astro.cookies.get('user_token')?.value;
if (!userToken) {
    return Astro.redirect('/login');
}
const requiredPerms = ['admin', 'leag_coord', 'leag_comm'];
const userValidate = await validateUser(userToken, requiredPerms).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

const userAuthorized = permsHasOneOf(userValidate, requiredPerms);

if (!userAuthorized) {
    status = '403';
}

const { season_id } = Astro.params;

const season: Season = await srlmGet(`/seasons/${season_id}?league=osl&cached=False`).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

var divisionsFormData: Division[] = [];
if (Astro.request.method === "POST") {
    const formData = await Astro.request.formData();

    async function createSeasonDivision(divisionAcronym: string) {
        if (formData.get(divisionAcronym) === 'on') {
            const input = {
                season_id: season.id,
                division_acronym: divisionAcronym,
                league: 'osl'
            }
            await srlmPost('/season_division', '', input).catch(err => {
                if (err instanceof SRLMAPIError) {
                    status = err.code;
                }
                console.error(err);
            });
        }
    }

    const keys = Array.from(formData.keys())
    keys.forEach(div => {
        createSeasonDivision(div)
    })
    if (status === '200') {
        return Astro.redirect(`/league/seasons/${season.acronym}`)
    }
} else {
    const divisions: DivisionCollection = await srlmGet('/leagues/osl/divisions').then(resp => (resp.divisions)).catch(err => {
        if (err instanceof SRLMAPIError) {
            status = err.code;
        }
        console.error(err);
    });

    divisions.items.forEach(division => {
        var data = division;
        season.divisions.forEach(divLink => {
            if (divLink.acronym === division.acronym) {
                data.in_season = true;
            }
        })
        divisionsFormData.push(data);
    })
}
---
{status === '400' &&
	<Page400/>
}
{status === '401' &&
	<Page401/>
}
{status === '403' &&
	<Page403/>
}
{status === '404' &&
	<Page404/>
}
{status === '500' &&
	<Page500/>
}
{status === '503' &&
	<Page503/>
}
{status === '200' &&
    <Layout title="Manage Divisions">
        <main class="py-10 sm:container mx-auto text-white">
            <div class="pt-3 pb-10 mx-auto max-w-96 text-center">
                <h2 class="text-2xl">Manage divisions: {season.name}</h2>
                <form class="mt-5" method="post">
                    {divisionsFormData.length > 0 &&
                        divisionsFormData.map(division => (
                            <p class="py-1 max-w-80 mx-auto h-8">
                                <label class="pl-14">{division.name}</label>
                                <input class="float-right mr-16 mt-1" name={division.acronym} type="checkbox" checked={division.in_season} disabled={division.in_season}/>
                            </p>
                        ))
                    }
                    <button class="mt-5 bg-blue-400 bg-opacity-80 hover:shadow-md hover:bg-opacity-60 duration-200 transition-all text-white font-bold py-2 rounded-md shadow-black w-52">
                        Update
                    </button>
                </form>
            </div>
        </main>
    </Layout>
}