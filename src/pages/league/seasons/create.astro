---
import Layout from "../../../layouts/Layout.astro";
import { permsHasOneOf, validateUser } from "../../../util/authUtils";
import type { Matchtypes } from "../../../util/srlmTypes";
import { SRLMAPIError, srlmGet, srlmPost } from "../../../util/srlmUtils";
import Page400 from '../../400.astro';
import Page401 from '../../401.astro';
import Page403 from '../../403.astro';
import Page404 from '../../404.astro';
import Page500 from '../../500.astro';
import Page503 from '../../503.astro';

var status = '200';

const userToken = Astro.cookies.get('user_token')?.value || '';
const requiredPerms = ['admin', 'leag_coord', 'leag_comm'];
const userValidate = await validateUser(userToken, requiredPerms).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});


const userAuthorized = permsHasOneOf(userValidate, requiredPerms);

if (!userAuthorized && status === '200') {
    status = '403';
}

const matchtypes: Matchtypes = await srlmGet('/match/type').catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

var errors: {[key:string]: string} = {};

if (Astro.request.method === "POST" && status === "200") {
    const formData = await Astro.request.formData();
    const inputs = {
        name: formData.get('name')?.toString(),
        acronym: formData.get('acronym')?.toString(),
        league: 'osl',
        start_date: formData.get('start-date')! || null,
        end_date: formData.get('end-date')! || null,
        finals_start: formData.get('finals-start-date')! || null,
        finals_end: formData.get('finals-end-date')! || null,
        match_type: formData.get('match-type')! || null
    }
    const resp = await srlmPost('/seasons', '', inputs).catch(err => {
        if (err instanceof SRLMAPIError) {
            if (err.code === '409') {
                err.data.fields.map((err:{field:string, error: string}) => {
                    errors[err.field] = err.error;                
                })
            } else {
                status = err.code;
            }
        }
        console.error(err);
    });
    if (resp) {
        return Astro.redirect(`/league/seasons/${inputs.acronym}?cached=False`);
    }
}


---
{status === '400' &&
    <Page400/>
}
{status === '401' &&
	<Page401/>
}
{status === '403' &&
	<Page403/>
}
{status === '404' &&
	<Page404/>
}
{status === '500' &&
	<Page500/>
}
{status === '503' &&
	<Page503/>
}
{status === '200' &&
    <Layout title="Create Season">
        <main class="py-10 sm:container mx-auto text-white">
            <div class="pt-3 pb-10 mx-auto max-w-96 text-center">
                <form class="mt-5" method="post">
                    <script type="text/javascript">
                        function minDate(child, parent) {
                            //@ts-ignore
                            var minDate = document.getElementById(parent).value;
                            document.getElementById(child).setAttribute("min", minDate);
                        }
                    </script>
                    <h2 class="text-4xl">Create Season</h2>
                    <table class="w-full border-spacing-y-1.5 border-separate px-10">
                        <tr>
                            <td class="align-text-top text-left">
                                Name:
                            </td>
                            <td>
                                <input type="text" name="name" id="name" class="text-black indent-2 rounded-sm outline outline-2 outline-gray-400" required />
                                {(errors && errors['name']) && (
                                    <br/>
                                    <span class="text-red-600 font-bold">
                                        {errors['name']}
                                    </span>  
                                )}
                            </td>
                        </tr>
                        <tr>
                            <td class="align-text-top text-left">
                                Acronym:
                            </td>
                            <td>
                                <input type="text" name="acronym" id="acronym" class="text-black indent-2 rounded-sm outline outline-2 outline-gray-400" required />
                                {(errors && errors['acronym']) && (
                                    <br/>
                                    <span class="text-red-600 font-bold">
                                        {errors['acronym']}
                                    </span>  
                                )}
                            </td>
                        </tr>
                        <tr>
                            <td class="align-text-top text-left">
                                Start date:
                            </td>
                            <td>
                                <input type="date" name="start-date" id="start-date" onblur="minDate('end-date', 'start-date')" class="text-black rounded-sm outline outline-2 outline-gray-400" />
                            </td>
                        </tr>
                        <tr>
                            <td class="align-text-top text-left">
                                End date:
                            </td>
                            <td>
                                <input type="date" name="end-date" id="end-date" onblur="minDate('finals-start-date', 'end-date')" class="text-black rounded-sm outline outline-2 outline-gray-400" />
                            </td>
                        </tr>
                        <tr>
                            <td class="align-text-top text-left">
                                Finals start date:
                            </td>
                            <td>
                                <input type="date" name="finals-start-date" id="finals-start-date" onblur="minDate('finals-end-date', 'finals-start-date')" class="text-black rounded-sm outline outline-2 outline-gray-400" />
                            </td>
                        </tr>
                        <tr>
                            <td class="align-text-top text-left">
                                Finals end date:
                            </td>
                            <td>
                                <input type="date" name="finals-end-date" id="finals-end-date" class="text-black rounded-sm outline outline-2 outline-gray-400" />
                            </td>
                        </tr>
                        <tr>
                            <td class="align-text-top text-left">
                                Match type:
                            </td>
                            <td>
                                <select name="match-type" id="match-type" class="text-black rounded-sm outline outline-2 outline-gray-400" required>
                                    {
                                        matchtypes.matchtypes.map(type => (
                                            <option title={type.description} value={type.name}>{type.name}</option>
                                        ))
                                    }
                                </select>
                            </td>
                        </tr>
                        <tr class="py-5">
                            <td colspan="2">
                                <button class="bg-blue-400 bg-opacity-80 hover:shadow-md hover:bg-opacity-60 duration-200 transition-all text-white font-bold py-2 rounded-md shadow-black w-[80%]">
                                    Create Season
                                </button>
                            </td>
                        </tr>
                    </table>
                </form>
            </div>
        </main>
    </Layout>
}