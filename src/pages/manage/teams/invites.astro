---
import TeamManageLayout from "../../../layouts/TeamManageLayout.astro";
import { permsHasOneOf, validateUser } from "../../../util/authUtils";
import type { PlayerTeams, Team, TeamInvite, User } from "../../../util/srlmTypes";
import { srlmGet, srlmPost } from "../../../util/srlmUtils";

var userToken = Astro.cookies.get('user_token')?.value;
if (!userToken) {
    return Astro.redirect('/login')
}
const perms = ['admin', 'team_owner', 'team_manager', 'leag_coord', 'leag_comm'];
const userValidate = await validateUser(userToken, perms);

if (userValidate === '503') {
    return Astro.redirect('/503')
}

const user_is_elevated = permsHasOneOf(userValidate, ['admin', 'leag_coord', 'leag_comm']);
const user_is_owner = false;
const userIsManager = false;
const userIsPlayer = false;
const user_has_team = false;


const user: User = await srlmGet(`/users/${userValidate.user}`, userToken);
var player_team: Team = null;
if (user.player) {
    const resp: PlayerTeams = await srlmGet(`/players/${user.player}/teams?current=true&cached=false`);
    if (resp) {player_team = resp.current_team};
} else {
    return Astro.redirect('/profile');
}

if (player_team) {
    return Astro.redirect('/manage/teams');
}

const playerInvites: Array<TeamInvite> = await srlmGet(`/players/${user.player}/invites`).then(resp => resp['invites']);

console.log(playerInvites)

if (Astro.request.method === "POST") {
    const form_data = await Astro.request.formData();
    const action = form_data.get('action')?.toString();
    const value = form_data.get('value')?.toString();
    
    const resp = await srlmPost(`/players/${user.player}/invites`, '', {
        invite_id: value,
        action: action
    })
    console.log(resp)
    return Astro.redirect('/manage/teams/invites')
}

---
<TeamManageLayout 
    title={`My Team Invites`}
    team={null}
    page="invites"
    userElevated={user_is_elevated}
    user_owner={user_is_owner}
    user_manager={userIsManager}
    user_player={userIsPlayer}
    user_has_team={user_has_team}>
    <div class="mx-auto w-fit divide-y-2 divide-gray-600">
        <div class="mb-5">
            <h3 class="text-xl">Team Invites</h3>
            <table class="mt-5 mx-auto">
                <thead class="bg-gray-900">
                    <tr class="divide-x-2 divide-gray-400">
                        <th class="px-2">Team</th>
                        <th class="px-2">Invited by</th>
                        <th class="px-2">Action</th>
                    </tr>
                </thead>
                <tbody>
                    {playerInvites.length > 0 &&
                        playerInvites.map((invite, index) => (
                            <tr class={`${(index%2===0 && 'bg-gray-600') || 'bg-gray-700'} divide-x-2 divide-gray-400`}>
                                <td class="px-2">{invite.team.name}</td>
                                <td class="px-2">{invite.inviting_player.player_name}</td>
                                <td class="px-2 py-1 flex">
                                    <form method="post" class="mr-2">
                                        <input type="text" name="action" value="accept" hidden/>
                                        <input type="text" name="value" value={invite.id.toString()} hidden/>
                                        <button formaction={`/manage/teams/invites`} class="accept bg-gray-400 text-black font-bold px-2 rounded-md outline outline-2 outline-gray-900 hover:bg-gray-300">
                                            Accept
                                        </button>
                                    </form>
                                    <form method="post">
                                        <input type="text" name="action" value="reject" hidden/>
                                        <input type="text" name="value" value={invite.id.toString()} hidden/>
                                        <button formaction={`/manage/teams/invites`} class="reject bg-gray-400 text-black font-bold px-2 rounded-md outline outline-2 outline-gray-900 hover:bg-gray-300">
                                            Reject
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        )) ||
                        <tr class="bg-gray-700"><td colspan="100%" class="p-1">No invites received</td></tr>
                    }
                </tbody>
            </table>
            <script>
                var cancel_buttons = [].slice.call(document.getElementsByClassName('cancel'));
                cancel_buttons.forEach(element => {
                    element.onclick = function confirmCancel(e) {
                        if (!confirm('Are you sure you wish to cancel this application?'))
                            e.preventDefault();
                    }
                });
            </script>
        </div>
        
    </div>
</TeamManageLayout>