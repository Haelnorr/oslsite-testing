---
import TeamManageLayout from "../../../../layouts/TeamManageLayout.astro";
import { isTeamManager, is_team_owner, permsHasOneOf, validateUser } from "../../../../util/authUtils";
import type { PlayerTeams, Team, TeamManage, User } from "../../../../util/srlmTypes";
import { srlmDelete, srlmGet, srlmPost } from "../../../../util/srlmUtils";

var { team_id } = Astro.params;

var userToken = Astro.cookies.get('user_token')?.value;
if (!userToken) {
    return Astro.redirect('/login')
}
const perms = ['admin', 'team_owner', 'team_manager', 'leag_coord', 'leag_comm'];
const userValidate = await validateUser(userToken, perms);

if (userValidate === '503') {
    return Astro.redirect('/503')
}

const user_is_elevated = permsHasOneOf(userValidate, ['admin', 'leag_coord', 'leag_comm']);
const user_is_owner = is_team_owner(userValidate, +team_id);
const userIsManager = isTeamManager(userValidate, [+team_id]);

const team: TeamManage = await srlmGet(`/teams/${team_id}/manage`);

const user: User = await srlmGet(`/users/${userValidate.user}`, userToken);
var player_team: Team;
if (user.player) {
    const resp: PlayerTeams = await srlmGet(`/players/${user.player}/teams?current=true&cached=False`);
    if (resp) {player_team = resp.current_team};
}

var userIsPlayer = false;
var user_has_team = false;
if (player_team) {
    userIsPlayer = (player_team.id === team.id);
    user_has_team = true;
}

if (!userIsPlayer && !user_is_elevated) {
    return Astro.redirect(`/league/teams/${team.id}`);
}

if (Astro.request.method === "POST") {
    const form_data = await Astro.request.formData();
    const action = form_data.get('action')?.toString();
    const value = form_data.get('value')?.toString();

    switch (action) {
        case 'apply':
            var resp = await srlmPost(`/teams/${team.id}/apply`, '', {
                season_id: value
            });
            break;
        case 'cancel':
            var resp = await srlmDelete(`/teams/apply/${value}`)
            break;
    }

    return Astro.redirect(`/manage/teams/${team.id}/apply`);
}

function prettyDate(date: string) {
    if (!date) {
        return null;
    }
    const dateObj = new Date(date);
    return dateObj.toDateString();
}


---
<TeamManageLayout 
    title={`Manage Team: ${team.name}`}
    team={team}
    page="apply"
    userElevated={user_is_elevated}
    user_owner={user_is_owner}
    user_manager={userIsManager}
    user_player={userIsPlayer}
    user_has_team={user_has_team}>
    <div class="mx-auto w-fit divide-y-2 divide-gray-600">
        <div class="mb-5">
            <h3 class="text-xl">Applications</h3>
            <table class="mt-5 mx-auto">
                <thead class="bg-gray-900">
                    <tr class="divide-x-2 divide-gray-400">
                        <th class="px-2">Season</th>
                        <th class="px-2">Status</th>
                        <th class="px-2">Division</th>
                        <th class="px-2">Withdraw</th>
                    </tr>
                </thead>
                <tbody>
                    {team.applications.length > 0 &&
                        team.applications.map((application, index) => (
                            <tr class={`${(index%2===0 && 'bg-gray-600') || 'bg-gray-700'} divide-x-2 divide-gray-400`}>
                                <td class="px-2">{application.season.name}</td>
                                <td class="px-2">{application.status}</td>
                                <td class="px-2">{application.division && application.division.name}</td>
                                <td class="px-2 py-1">
                                    {(application.status === 'Pending' || application.status === 'Accepted') &&
                                        <form method="post">
                                            <input type="text" name="action" value="cancel" hidden/>
                                            <input type="text" name="value" value={application.id.toString()} hidden/>
                                            <button formaction={`/manage/teams/${team.id}/apply`} class="cancel bg-gray-400 text-black font-bold px-2 rounded-md outline outline-2 outline-gray-900 hover:bg-gray-300">
                                                Cancel
                                            </button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        )) ||
                        <tr class="bg-gray-700"><td colspan="100%" class="p-1">No applications to display</td></tr>
                    }
                </tbody>
            </table>
            <script>
                var cancel_buttons = [].slice.call(document.getElementsByClassName('cancel'));
                cancel_buttons.forEach(element => {
                    element.onclick = function confirmCancel(e) {
                        if (!confirm('Are you sure you wish to cancel this application?'))
                            e.preventDefault();
                    }
                });
            </script>
        </div>
        <div>
            <h3 class="text-xl mt-5">Seasons</h3>
            <table class="mt-5 mx-auto">
                <thead class="bg-gray-900">
                    <tr class="divide-x-2 divide-gray-400">
                        <th class="px-2">Season</th>
                        <th class="px-2">Start Date</th>
                        <th class="px-2">Match Type</th>
                        <th class="px-2">Apply</th>
                    </tr>
                </thead>
                <tbody>
                    {team.open_seasons.length > 0 &&
                        team.open_seasons.map((season, index) => (
                            <tr class={`${(index%2===0 && 'bg-gray-600') || 'bg-gray-700'} divide-x-2 divide-gray-400`}>
                                <td class="px-2">{season.name}</td>
                                <td class="px-2">{prettyDate(season.start_date)}</td>
                                <td class="px-2">{season.match_type}</td>
                                <td class="px-2 py-1">
                                    <form method="post">
                                        <input type="text" name="action" value="apply" hidden/>
                                        <input type="text" name="value" value={season.id.toString()} hidden/>
                                        <button formaction={`/manage/teams/${team.id}/apply`} class="apply bg-gray-400 text-black font-bold px-2 rounded-md outline outline-2 outline-gray-900 hover:bg-gray-300">
                                            Apply
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        )) ||
                        <tr class="bg-gray-700"><td colspan="100%" class="p-1">No seasons open for registration</td></tr>
                    }
                </tbody>
            </table>
            <script>
                var apply_buttons = [].slice.call(document.getElementsByClassName('apply'));
                apply_buttons.forEach(element => {
                    element.onclick = function confirmApply(e) {
                        if (!confirm('Are you sure you wish to apply to this season?'))
                            e.preventDefault();
                    }
                });
            </script>
        </div>
    </div>
</TeamManageLayout>