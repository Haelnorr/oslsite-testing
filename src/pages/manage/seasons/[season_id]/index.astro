---
import SeasonManageLayout from "../../../../layouts/SeasonManageLayout.astro";
import { permsHasOneOf, validateUser } from "../../../../util/authUtils";
import type { Season } from "../../../../util/srlmTypes";
import { SRLMAPIError, checkboxToBool, srlmGet, srlmPut } from "../../../../util/srlmUtils";
import Page400 from '../../../400.astro';
import Page401 from '../../../401.astro';
import Page403 from '../../../403.astro';
import Page404 from '../../../404.astro';
import Page500 from '../../../500.astro';
import Page503 from '../../../503.astro';

var status = '200';

const userToken = Astro.cookies.get('user_token')?.value || '';
const requiredPerms = ['admin', 'leag_coord', 'leag_comm'];
const userValidate = await validateUser(userToken, requiredPerms).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});
const userAuthorized = permsHasOneOf(userValidate, requiredPerms);

if (!userAuthorized && status == '200') {
    status = '403';
}

const { season_id } = Astro.params;

const season: Season = await srlmGet(`/seasons/${season_id}?league=osl&cached=False`).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

var errors: {[key:string]:string} = {};

if (Astro.request.method === "POST" && status === "200") {
    const formData = await Astro.request.formData();
    function parseDate(date_field:string) {
        var date = formData.get(date_field)!
        if (date) {
            return date.toString();
        } else {
            return null
        }
    }
    const inputs = {
        name: formData.get('name')?.toString(),
        acronym: formData.get('acronym')?.toString(),
        start_date: parseDate('start-date'),
        end_date: parseDate('end-date'),
        finals_start: parseDate('finals-start-date'),
        finals_end: parseDate('finals-end-date'),
        can_register: checkboxToBool(formData, 'can-register')
    }
    const resp= await srlmPut(`/seasons/${season.id}`, '', inputs).catch(err => {
        if (err instanceof SRLMAPIError) {
            if (err.code === '409') {
                err.data.fields.map((err:{field:string, error: string}) => {
                    errors[err.field] = err.error;                
                })
            } else {
                status = err.code;
            }
        }
        console.error(err);
    });
    if (resp) {
        return Astro.redirect(`/manage/seasons/`);
    }
}

---
{status === '400' &&
	<Page400/>
}
{status === '401' &&
	<Page401/>
}
{status === '403' &&
	<Page403/>
}
{status === '404' &&
	<Page404/>
}
{status === '500' &&
	<Page500/>
}
{status === '503' &&
	<Page503/>
}
{status === '200' &&
    <SeasonManageLayout title="Edit Season" page="edit" userValidate={userValidate!}>
        <div class="pt-3 pb-10 mx-auto max-w-96 text-center">
            <h2 class="text-2xl">{season.name}</h2>
            <form class="mt-5" method="post">
                <script type="text/javascript">
                    function minDate(child, parent) {
                        //@ts-ignore
                        var minDate = document.getElementById(parent).value;
                        document.getElementById(child).setAttribute("min", minDate);
                    }
                </script>
                <table class="w-full border-spacing-y-1.5 border-separate px-10">
                    <tr>
                        <td class="align-text-top text-left">
                            Name:
                        </td>
                        <td>
                            <input type="text" name="name" id="name" value={season.name} class="text-black indent-2 rounded-sm outline outline-2 outline-gray-400" required />
                            {(errors && errors['name']) && (
                                <br/>
                                <span class="text-red-600 font-bold">
                                    {errors['name']}
                                </span>  
                            )}
                        </td>
                    </tr>
                    <tr>
                        <td class="align-text-top text-left">
                            Acronym:
                        </td>
                        <td>
                            <input type="text" name="acronym" id="acronym" value={season.acronym} class="text-black indent-2 rounded-sm outline outline-2 outline-gray-400" required />
                            {(errors && errors['acronym']) && (
                                <br/>
                                <span class="text-red-600 font-bold">
                                    {errors['acronym']}
                                </span>  
                            )}
                        </td>
                    </tr>
                    <tr>
                        <td class="align-text-top text-left">
                            Start date:
                        </td>
                        <td>
                            {/**@ts-ignore*/}
                            <input type="date" name="start-date" id="start-date" value={season.start_date} onblur="minDate('end-date', 'start-date')" class="text-black rounded-sm outline outline-2 outline-gray-400" />
                        </td>
                    </tr>
                    <tr>
                        <td class="align-text-top text-left">
                            End date:
                        </td>
                        <td>
                            {/**@ts-ignore*/}
                            <input type="date" name="end-date" id="end-date" value={season.end_date} onblur="minDate('finals-start-date', 'end-date')" class="text-black rounded-sm outline outline-2 outline-gray-400" />
                        </td>
                    </tr>
                    <tr>
                        <td class="align-text-top text-left">
                            Finals start date:
                        </td>
                        <td>
                            {/**@ts-ignore*/}
                            <input type="date" name="finals-start-date" id="finals-start-date" value={season.finals_start} onblur="minDate('finals-end-date', 'finals-start-date')" class="text-black rounded-sm outline outline-2 outline-gray-400" />
                        </td>
                    </tr>
                    <tr>
                        <td class="align-text-top text-left">
                            Finals end date:
                        </td>
                        <td>
                            {/**@ts-ignore*/}
                            <input type="date" name="finals-end-date" id="finals-end-date" value={season.finals_end} class="text-black rounded-sm outline outline-2 outline-gray-400" />
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" class="py-2">
                            <span class="px-3">
                                Registration open:
                            </span>
                            {/**@ts-ignore*/}
                            <input type="checkbox" name="can-register" id="can-register" checked={season.can_register} class="text-black rounded-sm " />
                        </td>
                    </tr>
                    <tr class="py-5">
                        <td colspan="2">
                            <button class="bg-blue-400 bg-opacity-80 hover:shadow-md hover:bg-opacity-60 duration-200 transition-all text-white font-bold py-2 rounded-md shadow-black w-[80%]">
                                Update
                            </button>
                        </td>
                    </tr>
                </table>
            </form>
        </div>
    </SeasonManageLayout>
}