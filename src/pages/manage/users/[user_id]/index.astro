---
import UserManageLayout from "../../../../layouts/UserManageLayout.astro";
import { permsHasOneOf, setCookies, validateUser } from "../../../../util/authUtils";
import type { User, UserPermissions } from "../../../../util/srlmTypes";
import { SRLMAPIError, checkboxToBool, srlmGet, srlmPost, srlmPut } from "../../../../util/srlmUtils";
import Page400 from '../../../400.astro';
import Page401 from '../../../401.astro';
import Page403 from '../../../403.astro';
import Page404 from '../../../404.astro';
import Page500 from '../../../500.astro';
import Page503 from '../../../503.astro';

var status = '200';


const userToken = Astro.cookies.get('user_token')?.value || '';
const requiredPerms = ['admin', 'leag_comm', 'leag_coord'];
const userValidate = await validateUser(userToken, requiredPerms).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

const userAuthorized = permsHasOneOf(userValidate, requiredPerms);
const userIsAdmin = permsHasOneOf(userValidate, ['admin']);
const userIsComm = permsHasOneOf(userValidate, ['leag_comm']);

const { user_id } = Astro.params;

const user: User = await srlmGet(`/users/${user_id}`).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

const userPermsResp: UserPermissions = await srlmGet(`/users/${user_id}/permissions`).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});
var userPerms:{[key:string]:any} = {};
userPermsResp?.permissions.map(perm => {
    if (perm.mods === 'True') {
        userPerms[perm.key] = true;
    } else {
        if (perm.key === 'team_owner') {
            userPerms[perm.key] = perm.mods.split(',')
        } else {
            userPerms[perm.key] = +perm.mods
        }
    }
})

if (!userAuthorized && status === '200') {
    status = '403';
}

var errors:{[key:string]:string} = {};

if (Astro.request.method === "POST" && status === "200") {
    const formData = await Astro.request.formData();
    const permInputs = {
        admin: checkboxToBool(formData, 'admin'),
        leag_comm: checkboxToBool(formData, 'leag-comm'),
        leag_coord: checkboxToBool(formData, 'leag-coord'),
        team_owner: (formData.getAll('team-owner-mods').length > 0) && formData.getAll('team-owner-mods'),
        team_manager: checkboxToBool(formData, 'team-manager') && formData.getAll('team-manager-mod')
    }
    const resp = await srlmPut(`/users/${user.id}/permissions`, '', permInputs).catch(err => {
        if (err instanceof SRLMAPIError) {
            if (err.code === '409') {
                err.data.fields.map((err:{field:string, error: string}) => {
                    errors[err.field] = err.error;                
                })
            } else {
                status = err.code;
            }
        }
        console.error(err);
    });
    if (resp) {
        return Astro.redirect(`/manage/users/${user.id}`)
    }
}

type Team = {
    id: number,
    acronym: string,
    name: string
}

const teams: Team[] = await srlmGet('/teams/list').then(resp => resp.teams).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

---
{status === '401' &&
	<Page401/>
}
{status === '403' &&
	<Page403/>
}
{status === '404' &&
	<Page404/>
}
{status === '500' &&
	<Page500/>
}
{status === '503' &&
	<Page503/>
}
    {status === '200' &&
    <UserManageLayout title="Edit User" page="edit" userValidate={userValidate!}>
        <div class="pt-3 pb-10 mx-auto max-w-96 text-center">
            <form class="mt-5" method="post">
                {(userIsAdmin || userIsComm) &&
                    <table class="w-full px-10">
                        <thead>
                            <tr>
                                <td colspan="100%" class="text-2xl">
                                    Site Permissions:
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            {(userIsAdmin) && 
                                <tr>
                                    <td class="text-right w-[30%]">
                                        <input type="checkbox" name="admin" checked={user.permissions.includes('admin')} />
                                    </td>
                                    <td colspan="2" class="w-[70%] text-left pl-5">
                                        Admin
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td class="text-right w-[30%]">
                                    <input type="checkbox" name="leag-comm" checked={user.permissions.includes('leag_comm')} />
                                </td>
                                <td colspan="2" class="w-[70%] text-left pl-5">
                                    League Commissioner
                                </td>
                            </tr>
                            <tr>
                                <td class="text-right w-[30%]">
                                    <input type="checkbox" name="leag-coord" checked={user.permissions.includes('leag_coord')} />
                                </td>
                                <td colspan="2" class="w-[70%] text-left pl-5">
                                    League Coordinator
                                </td>
                            </tr>
                        </tbody>
                    </table>
                }
                <table>
                    <thead>
                        <tr>
                            <td colspan="100%" class="pt-4 text-2xl">Team Management:</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="text-right py-1">
                                Team Owner:
                            </td>
                            <td colspan="2" class="text-left pl-5 text-black py-1">
                                <select multiple="multiple" class="w-48 text-black indent-2 rounded-sm outline outline-2 outline-gray-400 team-list-select" name="team-owner-mods" id="team-owner-list">
                                    {
                                        teams.map(team => (
                                            <option value={team.id} selected={(userPerms['team_owner'] && (userPerms['team_owner'].includes(team.id.toString())))}>{team.name}</option>
                                        ))
                                    }
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td class="text-right py-1">Team Manager:</td>
                            <td class="text-left pl-5 py-1">
                                <input type="checkbox" name="team-manager" id="team-manager-checkbox" checked={userPerms['team_manager']} onchange="deselectTeam()"/>
                            </td>
                            <td class="text-left py-1">
                                <select class="w-40 text-black indent-2 rounded-sm outline outline-2 outline-gray-400 team-list-select" name="team-manager-mod" id="team-manager-list" onchange="checkTheBox()">
                                    <option value="" id="no-team" disabled selected={!userPerms['team_manager']}>Select team</option>
                                    {
                                        teams.map(team => (
                                            <option value={team.id} id={`team-${team.id}`} selected={(userPerms['team_manager'] && (team.id === userPerms['team_manager']))}>{team.name}</option>
                                        ))
                                    }
                                </select>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <button class="bg-blue-400 bg-opacity-80 hover:shadow-md hover:bg-opacity-60 duration-200 transition-all text-white font-bold py-2 rounded-md shadow-black w-40 mt-4">
                    Update
                </button>
                <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
                <script>
                    jQuery(function() {
                        //@ts-ignore
                        $('.team-list-select').select2();
                    });
                    const teamManageList = document.getElementById('team-manager-list');
                    const teamManageCheckBox = document.getElementById('team-manager-checkbox');
                    
                    function checkTheBox() {
                        //@ts-ignore
                        if (+teamManageList.value) {
                            //@ts-ignore
                            teamManageCheckBox.checked = true;
                        }
                    }

                    function deselectTeam() {
                        //@ts-ignore
                        if (+teamManageList.value) {
                            //@ts-ignore
                            teamManageList.value = "";
                        }
                    }
                </script>
            </form>
        </div>
    </UserManageLayout>
}