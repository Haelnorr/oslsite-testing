---
import MatchManageLayout from '../../../../layouts/MatchManageLayout.astro';
import { permsHasOneOf, validateUser } from '../../../../util/authUtils';
import { readJSONFile } from '../../../../util/fileUtils';
import type { Gamemode, Match } from '../../../../util/srlmTypes';
import { SRLMAPIError, srlmGet, srlmPost } from '../../../../util/srlmUtils';
import Page400 from '../../../400.astro';
import Page401 from '../../../401.astro';
import Page403 from '../../../403.astro';
import Page404 from '../../../404.astro';
import Page500 from '../../../500.astro';
import Page503 from '../../../503.astro';

var status = '200';

const userToken = Astro.cookies.get('user_token')?.value || '';
const permsList = ['admin', 'leag_coord', 'leag_comm'];
const userValidate = await validateUser(userToken, permsList).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    } else {
        status = '500';
    }
	console.error(err);
});

const userElevated = permsHasOneOf(userValidate, permsList);
if (!userElevated && status === '200') {
    status = '403';
}

const { match_id } = Astro.params;
const match: Match = await srlmGet(`/match/${match_id}`).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

const gamemodes: Gamemode[] = await srlmGet('/match/gamemodes').then((resp) => resp['items']).catch(err => {
    if (err instanceof SRLMAPIError) {
        status = err.code;
    }
	console.error(err);
});

function timestampFromLogFileName(filename: string) {
    // const inputFormat = "%Y%m%d_%H%M%S";
    // const outputFormat = "%Y-%m-%dT%H:%M:%SZ";

    const timestampRaw = filename.slice(0,15);

    const year = +timestampRaw.slice(0,4);
    const month = +timestampRaw.slice(4,6);
    const day = +timestampRaw.slice(6,8);
    const hour = +timestampRaw.slice(9,11);
    const minute = +timestampRaw.slice(11,13);
    const second = +timestampRaw.slice(13,15);

    var timestamp = new Date(year, month, day, hour, minute, second)

    return timestamp;
}

if (Astro.request.method === "POST" && status === "200") {
    try {
        const formData = await Astro.request.formData();

        const period1 = formData.get('period1') as File;
        const period2 = formData.get('period1') as File;
        const period3 = formData.get('period1') as File;

        const period1data = await readJSONFile(period1);
        const period2data = await readJSONFile(period2);
        const period3data = await readJSONFile(period3);

        const periods = [
            {
                log_json: period1data,
                created: timestampFromLogFileName(period1.name)
            },
            {
                log_json: period2data,
                created: timestampFromLogFileName(period2.name)
            },
            {
                log_json: period3data,
                created: timestampFromLogFileName(period3.name)
            },
        ]

        const matchData = {
            periods: periods,
            match_id: match.id,
            region: "oce-east",
            gamemode: formData.get('gamemode')
        }

        const upload = await srlmPost(`/match/logs`, '', matchData).catch(err => {
            if (err instanceof SRLMAPIError) {
                status = err.code;
            }
            console.error(err.data.periods);
        });

        if (upload) {
            return Astro.redirect(`/league/match/${match.id}`);
        }
    } catch (error) {
        if (error instanceof Error) {
            console.error(error.message);
            status = '500';
        }
    }
}

---
{status === '400' &&
	<Page400/>
}
{status === '401' &&
	<Page401/>
}
{status === '403' &&
	<Page403/>
}
{status === '404' &&
	<Page404/>
}
{status === '500' &&
	<Page500/>
}
{status === '503' &&
	<Page503/>
}
{status === '200' &&
	<MatchManageLayout title="Upload Match Logs" page="upload" userValidate={userValidate!}>
		{!match.results &&
            <div class="flex justify-evenly text-white">
                <div>
                    <p>{match.home_team.name} vs {match.away_team.name}</p>
                    <p>Round: {match.round} | Match week: {match.match_week}</p>
                    <form method="post" class="mt-5" enctype="multipart/form-data">
                        <label for="gamemode">
                            Game mode:  
                        </label>
                        <select class="text-black" name="gamemode" required>
                            {
                                gamemodes.map(gamemode => (
                                    <option 
                                        value={gamemode.value} 
                                        title={gamemode.info}
                                        selected={(gamemode.value === 'hockey') && "selected"}>
                                            {gamemode.label}
                                    </option>
                                ))
                            }
                        </select><br>
                        <label>
                            Period 1:
                            <input name="period1" id="period1" type="file" accept="application/json" required/>
                            
                        </label><br>
                        <label>
                            Period 2:
                            <input name="period2" id="period2" type="file" accept="application/json" required/>
                            
                        </label><br>
                        <label>
                            Period 3:
                            <input name="period3" id="period3" type="file" accept="application/json" required/>
                            
                        </label><br><br>
                        <button class="bg-blue-400 bg-opacity-80 hover:shadow-md hover:bg-opacity-60 duration-200 transition-all text-white font-bold py-2 rounded-md shadow-black w-full">
                            Upload Logs
                        </button>
                    </form>
                </div>
            </div>
            ||
            <div class="text-center text-white text-lg">
                Match already has confirmed results
            </div>
        }
	</MatchManageLayout>
}